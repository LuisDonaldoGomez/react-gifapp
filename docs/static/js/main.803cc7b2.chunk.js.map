{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.jsx","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.jsx","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","alert","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","substring","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"uLAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAqBhD,OAEQ,0BAAMC,SAfO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,GAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,KAGdO,MAAM,sCAQF,2BACIC,KAAK,OACLC,MAAOV,EACPW,SAvBU,SAACR,GACvBF,EAAeE,EAAES,OAAOF,Y,uBCRnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,8DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,EAAMO,UAAU,EAAE,OCHrBC,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EACdf,mBAAS,CAC/BsB,KAAO,GACPc,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAyBxC,OAlBAC,qBAAU,WACNzB,EAASC,GACJyB,MAAM,SAAAC,GAIHH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAMtB,CAAErB,IAIEsB,EDpB0BK,CAAc3B,GAAlCa,EAJwB,EAI7BN,KAAac,EAJgB,EAIhBA,QAErB,OACI,oCACI,wBAAIL,UAAU,qCAAd,IAAoDhB,EAApD,KAECqB,GAAW,uBAAGL,UAAU,oCAAb,cAEZ,yBAAKA,UAAU,aAGPH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACIkB,IAAKlB,EAAIC,IACJD,UElBpBmB,EAAe,WAAO,IAAD,EAEM5C,mBAAS,CAAC,WAFhB,mBAEvB6C,EAFuB,KAEX9C,EAFW,KAM9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAIA,4BAEI8C,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI4B,IAAK5B,EACLA,SAAUA,U,MChBlC+B,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.803cc7b2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( { setCategories } ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n       \n        if(inputValue.trim().length > 2){\n            setCategories(cats => [inputValue, ...cats])\n            setInputValue('');\n        }\n        else{\n            alert('Agrega algo mayor a 2 caracteres');\n        }\n        \n    }\n\n    return (\n    \n            <form onSubmit={ handleSubmit }>\n                <input \n                    type=\"text\"\n                    value={inputValue}\n                    onChange={ handleInputChange }\n\n                />\n\n            </form>\n        \n    )\n}\n\nAddCategory.propTypes = {\n    setCategories : PropTypes.func.isRequired\n}\n","export const getGifs = async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=6&api_key=NphIioXV0UPnmPOLasUO29fK7uMaExwq`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n    \n}","import React from 'react'\n\nexport const GifGridItem = ({title ,url}) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}/>\n            <p>{title.substring(0,10)}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ( {category }) => {\n\n    \n   \n    const { data:images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\"> {category} </h3>\n\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n            \n            <div className=\"card-grid\">\n                \n                {\n                    images.map(img  => (\n                        <GifGridItem\n                            key={img.id} \n                            { ...img }\n                        />\n                    ))\n                }\n                \n                \n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n    const [state, setState] = useState({\n        data : [],\n        loading: true\n    });\n\n\n    useEffect(() => {\n        getGifs( category)\n            .then( imgs => {\n                \n               \n\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n\n                \n              \n            })\n    }, [ category ])\n\n    \n\n    return state;\n\n}\n\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Coding']);\n\n\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories } />\n            <hr/>\n            \n            \n\n            <ol>\n                { \n                categories.map( category => \n                    <GifGrid \n                        key={category}\n                        category={category}\n                    />\n                ) \n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}